{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversed","none","sortType","setSortType","goods","visibleGoods","sort","item1","item2","alphabet","localeCompare","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA5BD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAKP,EAASc,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAC9B,QACE,OAAO,MAITZ,GACFM,EAAaO,UAGRP,EAOOQ,CAAkBjB,EAAiB,CAAEG,aAAYG,aAmB/D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYd,IAAaP,EAASc,WAEtCQ,QA1Be,WACrBd,EAAYR,EAASc,WAmBjB,iCAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYd,IAAaP,EAASgB,SAEtCM,QAjCa,WACnBd,EAAYR,EAASgB,SA0BjB,4BAWA,wBACEI,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAA2B,IAAfjB,IAEhBkB,QAxCQ,WACdjB,GAAaD,IAiCT,sBAWEG,IAAaP,EAASM,OAAuB,IAAfF,IAE9B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QA9CI,WACZd,EAAYR,EAASM,MACrBD,GAAY,IAyCN,sBAUJ,6BACE,6BACGI,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cC5HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4d6b1880.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  none,\n  alphabet,\n  length,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((item1, item2) => {\n    switch (sortType) {\n      case SortType.alphabet:\n        return item1.localeCompare(item2);\n      case SortType.length:\n        return item1.length - item2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.none);\n\n  const goods = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.alphabet);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.length);\n  };\n\n  const reverse = () => {\n    setReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.none);\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.alphabet },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.length },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': isReversed === false },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.none || isReversed !== false)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}