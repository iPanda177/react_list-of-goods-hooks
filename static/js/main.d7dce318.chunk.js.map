{"version":3,"sources":["App.tsx","components/Button/Button.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","Button","props","children","className","rest","type","classNames","GoodsList","reorderdGoods","map","good","goodsFromServer","App","useState","isReversed","setReversed","NONE","sortType","setSortType","goods","visibleGoods","sort","item1","item2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","sortBy","parameter","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,oHCbQC,EAA0B,SAACC,GACtC,IACEC,EAGED,EAHFC,SACAC,EAEEF,EAFFE,UACGC,EAHL,YAIIH,EAJJ,GAMA,OACE,gDACEI,KAAK,SACLF,UAAWG,IAAW,SAAUH,IAC5BC,GAHN,aAKGF,MCfMK,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAH,OACxC,6BACGA,EAAcC,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SFDjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGZ,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMa,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAmBd,EAASiB,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA5BD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAKlB,EAASyB,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKxB,EAAS2B,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITb,GACFM,EAAaQ,UAGRR,EAOOS,CAAkBlB,EAAiB,CAAEG,aAAYG,aAEzDa,EAAS,SAACC,GACdb,EAAYa,IAYd,OACE,sBAAK5B,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEA,UACEG,IAAW,UAAW,CACpB,WAAYW,IAAalB,EAASyB,WAGtCQ,QAAS,kBAAMF,EAAO/B,EAASyB,WANjC,iCAWA,cAAC,EAAD,CACErB,UACEG,IAAW,aAAc,CACvB,WAAYW,IAAalB,EAAS2B,SAGtCM,QAAS,kBAAMF,EAAO/B,EAAS2B,SANjC,4BAWA,cAAC,EAAD,CACEvB,UACEG,IAAW,aAAc,CACvB,YAA2B,IAAfQ,IAGhBkB,QAxCQ,WACdjB,GAAaD,IAiCT,sBAWEG,IAAalB,EAASiB,OAAuB,IAAfF,IAC9B,cAAC,EAAD,CACEX,UAAU,qBACV6B,QA5CI,WACZd,EAAYnB,EAASiB,MACrBD,GAAY,IAwCN,sBASJ,cAAC,EAAD,CAAWP,cAAeW,QGtHhCc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d7dce318.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nimport { Button } from './components/Button';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((item1, item2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return item1.localeCompare(item2);\n      case SortType.LENGTH:\n        return item1.length - item2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n\n  const goods = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n\n  const sortBy = (parameter: SortType) => {\n    setSortType(parameter);\n  };\n\n  const reverse = () => {\n    setReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <Button\n          className={\n            classNames('is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })\n          }\n          onClick={() => sortBy(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </Button>\n\n        <Button\n          className={\n            classNames('is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })\n          }\n          onClick={() => sortBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </Button>\n\n        <Button\n          className={\n            classNames('is-warning', {\n              'is-light': isReversed === false,\n            })\n          }\n          onClick={reverse}\n        >\n          Reverse\n        </Button>\n\n        {(sortType !== SortType.NONE || isReversed !== false) && (\n          <Button\n            className=\"is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </Button>\n        )}\n      </div>\n\n      <GoodsList reorderdGoods={goods} />\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  children: React.ReactNode;\n\n};\n\nexport const Button: React.FC<Props> = (props) => {\n  const {\n    children,\n    className,\n    ...rest\n  } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames('button', className)}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  reorderdGoods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ reorderdGoods }) => (\n  <ul>\n    {reorderdGoods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}